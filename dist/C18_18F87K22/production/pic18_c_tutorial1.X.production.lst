

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Apr 11 17:20:06 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ADCON0bits	set	4034
    17  0000                     _ADCON1bits	set	4033
    18  0000                     _ADCON2bits	set	4032
    19  0000                     _ADRESH	set	4036
    20  0000                     _ADRESL	set	4035
    21  0000                     _INTCONbits	set	4082
    22  0000                     _LATC	set	3979
    23  0000                     _LATCbits	set	3979
    24  0000                     _OSCCON	set	4051
    25  0000                     _OSCTUNE	set	3995
    26  0000                     _PIE1bits	set	3997
    27  0000                     _PIE2bits	set	4000
    28  0000                     _PIR1bits	set	3998
    29  0000                     _PIR2bits	set	4001
    30  0000                     _RCONbits	set	4048
    31  0000                     _T1CONbits	set	4045
    32  0000                     _T3CONbits	set	4017
    33  0000                     _TMR1H	set	4047
    34  0000                     _TMR1L	set	4046
    35  0000                     _TMR3H	set	4019
    36  0000                     _TMR3L	set	4018
    37  0000                     _TRISA	set	3986
    38  0000                     _TRISB	set	3987
    39  0000                     _TRISC	set	3988
    40  0000                     _TRISD	set	3989
    41                           
    42                           	psect	nvCOMRAM
    43  000042                     __pnvCOMRAM:
    44                           	opt stack 0
    45  000042                     _leftturnstep:
    46                           	opt stack 0
    47  000042                     	ds	2
    48  000044                     _lstep:
    49                           	opt stack 0
    50  000044                     	ds	2
    51  000046                     _lturn:
    52                           	opt stack 0
    53  000046                     	ds	2
    54  000048                     _rstep:
    55                           	opt stack 0
    56  000048                     	ds	2
    57  00004A                     _ustep:
    58                           	opt stack 0
    59  00004A                     	ds	2
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000392                     __pcinit:
    65                           	opt stack 0
    66  000392                     start_initialization:
    67                           	opt stack 0
    68  000392                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to COMRAM (34 bytes)
    72  000392  EE00  F001         	lfsr	0,__pbssCOMRAM
    73  000396  0E22               	movlw	34
    74  000398                     clear_0:
    75  000398  6AEE               	clrf	postinc0,c
    76  00039A  06E8               	decf	wreg,f,c
    77  00039C  E1FD               	bnz	clear_0
    78  00039E                     end_of_initialization:
    79                           	opt stack 0
    80  00039E                     __end_of__initialization:
    81                           	opt stack 0
    82  00039E  0100               	movlb	0
    83  0003A0  EF6A  F001         	goto	_main	;jump to C main() function
    84                           postinc0	equ	0xFEE
    85                           wreg	equ	0xFE8
    86                           
    87                           	psect	bssCOMRAM
    88  000001                     __pbssCOMRAM:
    89                           	opt stack 0
    90  000001                     _adc:
    91                           	opt stack 0
    92  000001                     	ds	2
    93  000003                     _forward:
    94                           	opt stack 0
    95  000003                     	ds	2
    96  000005                     _has_front_wall:
    97                           	opt stack 0
    98  000005                     	ds	2
    99  000007                     _has_left_wall:
   100                           	opt stack 0
   101  000007                     	ds	2
   102  000009                     _has_right_wall:
   103                           	opt stack 0
   104  000009                     	ds	2
   105  00000B                     _left:
   106                           	opt stack 0
   107  00000B                     	ds	2
   108  00000D                     _lstepcount:
   109                           	opt stack 0
   110  00000D                     	ds	2
   111  00000F                     _lturncount:
   112                           	opt stack 0
   113  00000F                     	ds	2
   114  000011                     _prev_adc:
   115                           	opt stack 0
   116  000011                     	ds	2
   117  000013                     _right:
   118                           	opt stack 0
   119  000013                     	ds	2
   120  000015                     _rightstep:
   121                           	opt stack 0
   122  000015                     	ds	2
   123  000017                     _rightturnstep:
   124                           	opt stack 0
   125  000017                     	ds	2
   126  000019                     _rstepcount:
   127                           	opt stack 0
   128  000019                     	ds	2
   129  00001B                     _step_count:
   130                           	opt stack 0
   131  00001B                     	ds	2
   132  00001D                     _uturn:
   133                           	opt stack 0
   134  00001D                     	ds	2
   135  00001F                     _lmotorstephigh:
   136                           	opt stack 0
   137  00001F                     	ds	1
   138  000020                     _lmotorsteplow:
   139                           	opt stack 0
   140  000020                     	ds	1
   141  000021                     _rmotorstephigh:
   142                           	opt stack 0
   143  000021                     	ds	1
   144  000022                     _rmotorsteplow:
   145                           	opt stack 0
   146  000022                     	ds	1
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	cstackCOMRAM
   151  000023                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000023                     ??_low_isr:
   154  000023                     
   155                           ; 0 bytes @ 0x0
   156  000023                     	ds	17
   157  000034                     ??_high_isr:
   158                           
   159                           ; 0 bytes @ 0x11
   160  000034                     	ds	14
   161  000042                     postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           ; 0 bytes @ 0x1F
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 81 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;		None               void
   177 ;; Registers used:
   178 ;;		wreg, status,2, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called:    3
   190 ;; This function calls:
   191 ;;		_ConfigureOscillator
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  0002D4                     __ptext0:
   199                           	opt stack 0
   200  0002D4                     _main:
   201                           	opt stack 28
   202                           
   203                           ;main.c: 84: OSCCON = 0b01111100;
   204                           
   205                           ;incstack = 0
   206  0002D4  0E7C               	movlw	124
   207  0002D6  6ED3               	movwf	4051,c	;volatile
   208                           
   209                           ;main.c: 86: OSCTUNE = 0b01001111;
   210  0002D8  0E4F               	movlw	79
   211  0002DA  6E9B               	movwf	3995,c	;volatile
   212                           
   213                           ;main.c: 88: ConfigureOscillator();
   214  0002DC  ECD2  F001         	call	_ConfigureOscillator	;wreg free
   215                           
   216                           ;main.c: 94: TRISA = 0b00000001;
   217  0002E0  0E01               	movlw	1
   218  0002E2  6E92               	movwf	3986,c	;volatile
   219                           
   220                           ;main.c: 95: TRISC = 0b00000000;
   221  0002E4  0E00               	movlw	0
   222  0002E6  6E94               	movwf	3988,c	;volatile
   223                           
   224                           ;main.c: 96: TRISB = 0b00000000;
   225  0002E8  0E00               	movlw	0
   226  0002EA  6E93               	movwf	3987,c	;volatile
   227                           
   228                           ;main.c: 97: TRISD = 0b00000000;
   229  0002EC  0E00               	movlw	0
   230  0002EE  6E95               	movwf	3989,c	;volatile
   231                           
   232                           ;main.c: 102: LATC = 0b00000000;
   233  0002F0  0E00               	movlw	0
   234  0002F2  6E8B               	movwf	3979,c	;volatile
   235                           
   236                           ;main.c: 104: lstep = 1;
   237  0002F4  0E00               	movlw	0
   238  0002F6  6E45               	movwf	_lstep+1,c
   239  0002F8  0E01               	movlw	1
   240  0002FA  6E44               	movwf	_lstep,c
   241                           
   242                           ;main.c: 105: rstep = 1;
   243  0002FC  0E00               	movlw	0
   244  0002FE  6E49               	movwf	_rstep+1,c
   245  000300  0E01               	movlw	1
   246  000302  6E48               	movwf	_rstep,c
   247                           
   248                           ;main.c: 106: leftturnstep = 1;
   249  000304  0E00               	movlw	0
   250  000306  6E43               	movwf	_leftturnstep+1,c
   251  000308  0E01               	movlw	1
   252  00030A  6E42               	movwf	_leftturnstep,c
   253                           
   254                           ;main.c: 107: ustep = 1;
   255  00030C  0E00               	movlw	0
   256  00030E  6E4B               	movwf	_ustep+1,c
   257  000310  0E01               	movlw	1
   258  000312  6E4A               	movwf	_ustep,c
   259                           
   260                           ;main.c: 108: forward = 0;
   261  000314  0E00               	movlw	0
   262  000316  6E04               	movwf	_forward+1,c
   263  000318  0E00               	movlw	0
   264  00031A  6E03               	movwf	_forward,c
   265                           
   266                           ;main.c: 109: lturn = 1;
   267  00031C  0E00               	movlw	0
   268  00031E  6E47               	movwf	_lturn+1,c
   269  000320  0E01               	movlw	1
   270  000322  6E46               	movwf	_lturn,c
   271                           
   272                           ;main.c: 110: rstepcount = 0;
   273  000324  0E00               	movlw	0
   274  000326  6E1A               	movwf	_rstepcount+1,c
   275  000328  0E00               	movlw	0
   276  00032A  6E19               	movwf	_rstepcount,c
   277                           
   278                           ;main.c: 111: lstepcount = 0;
   279  00032C  0E00               	movlw	0
   280  00032E  6E0E               	movwf	_lstepcount+1,c
   281  000330  0E00               	movlw	0
   282  000332  6E0D               	movwf	_lstepcount,c
   283                           
   284                           ;main.c: 112: lturncount = 0;
   285  000334  0E00               	movlw	0
   286  000336  6E10               	movwf	_lturncount+1,c
   287  000338  0E00               	movlw	0
   288  00033A  6E0F               	movwf	_lturncount,c
   289                           
   290                           ;main.c: 115: ADCON0bits.CHS = 0b0000;
   291  00033C  94C2               	bcf	4034,2,c	;volatile
   292  00033E  96C2               	bcf	4034,3,c	;volatile
   293  000340  98C2               	bcf	4034,4,c	;volatile
   294  000342  9AC2               	bcf	4034,5,c	;volatile
   295                           
   296                           ;main.c: 116: ADCON0bits.GO = 0;
   297  000344  92C2               	bcf	4034,1,c	;volatile
   298                           
   299                           ;main.c: 117: ADCON1bits.VCFG = 0b00;
   300  000346  0ECF               	movlw	-49
   301  000348  16C1               	andwf	4033,f,c	;volatile
   302                           
   303                           ;main.c: 118: ADCON1bits.PCFG = 0b1100;
   304  00034A  50C1               	movf	4033,w,c	;volatile
   305  00034C  0BF0               	andlw	-16
   306  00034E  090C               	iorlw	12
   307  000350  6EC1               	movwf	4033,c	;volatile
   308                           
   309                           ;main.c: 119: ADCON2bits.ADFM = 1;
   310  000352  8EC0               	bsf	4032,7,c	;volatile
   311                           
   312                           ;main.c: 120: ADCON2bits.ACQT = 0b010;
   313  000354  50C0               	movf	4032,w,c	;volatile
   314  000356  0BC7               	andlw	-57
   315  000358  0910               	iorlw	16
   316  00035A  6EC0               	movwf	4032,c	;volatile
   317                           
   318                           ;main.c: 121: ADCON2bits.ADCS = 0b010;
   319  00035C  50C0               	movf	4032,w,c	;volatile
   320  00035E  0BF8               	andlw	-8
   321  000360  0902               	iorlw	2
   322  000362  6EC0               	movwf	4032,c	;volatile
   323                           
   324                           ;main.c: 122: ADCON0bits.ADON = 1;
   325  000364  80C2               	bsf	4034,0,c	;volatile
   326                           
   327                           ;main.c: 125: RCONbits.IPEN = 1;
   328  000366  8ED0               	bsf	4048,7,c	;volatile
   329                           
   330                           ;main.c: 126: INTCONbits.GIE = 1;
   331  000368  8EF2               	bsf	intcon,7,c	;volatile
   332                           
   333                           ;main.c: 127: INTCONbits.PEIE = 1;
   334  00036A  8CF2               	bsf	intcon,6,c	;volatile
   335                           
   336                           ;main.c: 128: INTCONbits.INT0IE = 0;
   337  00036C  98F2               	bcf	intcon,4,c	;volatile
   338                           
   339                           ;main.c: 129: INTCONbits.RBIE = 0;
   340  00036E  96F2               	bcf	intcon,3,c	;volatile
   341                           
   342                           ;main.c: 133: T3CONbits.TMR3ON = 0;
   343  000370  90B1               	bcf	4017,0,c	;volatile
   344                           
   345                           ;main.c: 134: T3CONbits.RD16 = 1;
   346  000372  8EB1               	bsf	4017,7,c	;volatile
   347                           
   348                           ;main.c: 135: T3CONbits.T3CKPS1 = 0;
   349  000374  9AB1               	bcf	4017,5,c	;volatile
   350                           
   351                           ;main.c: 136: T3CONbits.T3CKPS0 = 0;
   352  000376  98B1               	bcf	4017,4,c	;volatile
   353                           
   354                           ;main.c: 137: T3CONbits.TMR3CS = 0;
   355  000378  92B1               	bcf	4017,1,c	;volatile
   356                           
   357                           ;main.c: 138: PIR2bits.TMR3IF = 0;
   358  00037A  92A1               	bcf	4001,1,c	;volatile
   359                           
   360                           ;main.c: 139: PIE2bits.TMR3IE = 1;
   361  00037C  82A0               	bsf	4000,1,c	;volatile
   362                           
   363                           ;main.c: 142: T1CONbits.TMR1ON = 0;
   364  00037E  90CD               	bcf	4045,0,c	;volatile
   365                           
   366                           ;main.c: 143: T1CONbits.RD16 = 1;
   367  000380  8ECD               	bsf	4045,7,c	;volatile
   368                           
   369                           ;main.c: 144: T1CONbits.T1CKPS1 = 0;
   370  000382  9ACD               	bcf	4045,5,c	;volatile
   371                           
   372                           ;main.c: 145: T1CONbits.T1CKPS0 = 0;
   373  000384  98CD               	bcf	4045,4,c	;volatile
   374                           
   375                           ;main.c: 146: T1CONbits.TMR1CS = 0;
   376  000386  92CD               	bcf	4045,1,c	;volatile
   377                           
   378                           ;main.c: 147: PIR1bits.TMR1IF = 0;
   379  000388  909E               	bcf	3998,0,c	;volatile
   380                           
   381                           ;main.c: 148: PIE1bits.TMR1IE = 1;
   382  00038A  809D               	bsf	3997,0,c	;volatile
   383                           
   384                           ;main.c: 150: T1CONbits.TMR1ON = 1;
   385  00038C  80CD               	bsf	4045,0,c	;volatile
   386                           
   387                           ;main.c: 151: T3CONbits.TMR3ON = 1;
   388  00038E  80B1               	bsf	4017,0,c	;volatile
   389  000390                     l203:
   390                           
   391                           ;main.c: 154: {
   392  000390  D7FF               	goto	l203
   393  000392                     __end_of_main:
   394                           	opt stack 0
   395                           intcon	equ	0xFF2
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           
   399 ;; *************** function _ConfigureOscillator *****************
   400 ;; Defined at:
   401 ;;		line 24 in file "system.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		None
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; Hardware stack levels required when called:    2
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text1
   430  0003A4                     __ptext1:
   431                           	opt stack 0
   432  0003A4                     _ConfigureOscillator:
   433                           	opt stack 28
   434                           
   435                           ;incstack = 0
   436  0003A4  0012               	return	
   437  0003A6                     __end_of_ConfigureOscillator:
   438                           	opt stack 0
   439                           intcon	equ	0xFF2
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443 ;; *************** function _low_isr *****************
   444 ;; Defined at:
   445 ;;		line 213 in file "interrupts.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;		None               void
   452 ;; Registers used:
   453 ;;		None
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;Total ram usage:       17 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		Interrupt level 1
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	intcodelo
   474  000018                     __pintcodelo:
   475                           	opt stack 0
   476  000018                     _low_isr:
   477                           	opt stack 28
   478                           
   479                           ;incstack = 0
   480  000018  CFD8 F023          	movff	status,??_low_isr
   481  00001C  CFE8 F024          	movff	wreg,??_low_isr+1
   482  000020  CFE0 F025          	movff	bsr,??_low_isr+2
   483  000024  CFFA F026          	movff	pclath,??_low_isr+3
   484  000028  CFFB F027          	movff	pclatu,??_low_isr+4
   485  00002C  CFE9 F028          	movff	fsr0l,??_low_isr+5
   486  000030  CFEA F029          	movff	fsr0h,??_low_isr+6
   487  000034  CFE1 F02A          	movff	fsr1l,??_low_isr+7
   488  000038  CFE2 F02B          	movff	fsr1h,??_low_isr+8
   489  00003C  CFD9 F02C          	movff	fsr2l,??_low_isr+9
   490  000040  CFDA F02D          	movff	fsr2h,??_low_isr+10
   491  000044  CFF3 F02E          	movff	prodl,??_low_isr+11
   492  000048  CFF4 F02F          	movff	prodh,??_low_isr+12
   493  00004C  CFF6 F030          	movff	tblptrl,??_low_isr+13
   494  000050  CFF7 F031          	movff	tblptrh,??_low_isr+14
   495  000054  CFF8 F032          	movff	tblptru,??_low_isr+15
   496  000058  CFF5 F033          	movff	tablat,??_low_isr+16
   497  00005C  C033  FFF5         	movff	??_low_isr+16,tablat
   498  000060  C032  FFF8         	movff	??_low_isr+15,tblptru
   499  000064  C031  FFF7         	movff	??_low_isr+14,tblptrh
   500  000068  C030  FFF6         	movff	??_low_isr+13,tblptrl
   501  00006C  C02F  FFF4         	movff	??_low_isr+12,prodh
   502  000070  C02E  FFF3         	movff	??_low_isr+11,prodl
   503  000074  C02D  FFDA         	movff	??_low_isr+10,fsr2h
   504  000078  C02C  FFD9         	movff	??_low_isr+9,fsr2l
   505  00007C  C02B  FFE2         	movff	??_low_isr+8,fsr1h
   506  000080  C02A  FFE1         	movff	??_low_isr+7,fsr1l
   507  000084  C029  FFEA         	movff	??_low_isr+6,fsr0h
   508  000088  C028  FFE9         	movff	??_low_isr+5,fsr0l
   509  00008C  C027  FFFB         	movff	??_low_isr+4,pclatu
   510  000090  C026  FFFA         	movff	??_low_isr+3,pclath
   511  000094  C025  FFE0         	movff	??_low_isr+2,bsr
   512  000098  C024  FFE8         	movff	??_low_isr+1,wreg
   513  00009C  C023  FFD8         	movff	??_low_isr,status
   514  0000A0  0010               	retfie	
   515  0000A2                     __end_of_low_isr:
   516                           	opt stack 0
   517                           pclatu	equ	0xFFB
   518                           pclath	equ	0xFFA
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           prodh	equ	0xFF4
   524                           prodl	equ	0xFF3
   525                           intcon	equ	0xFF2
   526                           postinc0	equ	0xFEE
   527                           fsr0h	equ	0xFEA
   528                           fsr0l	equ	0xFE9
   529                           wreg	equ	0xFE8
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           bsr	equ	0xFE0
   533                           fsr2h	equ	0xFDA
   534                           fsr2l	equ	0xFD9
   535                           status	equ	0xFD8
   536                           
   537 ;; *************** function _high_isr *****************
   538 ;; Defined at:
   539 ;;		line 64 in file "interrupts.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;		None               void
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, prodl
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:       14 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		Interrupt level 2
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	intcode
   567  000008                     __pintcode:
   568                           	opt stack 0
   569  000008                     _high_isr:
   570                           	opt stack 28
   571                           
   572                           ;incstack = 0
   573  000008  CFFA F034          	movff	pclath,??_high_isr
   574  00000C  CFFB F035          	movff	pclatu,??_high_isr+1
   575  000010  CFE9 F036          	movff	fsr0l,??_high_isr+2
   576  000014  ED53  F000         	call	int_func,f	;refresh shadow registers
   577                           pclatu	equ	0xFFB
   578                           pclath	equ	0xFFA
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           prodh	equ	0xFF4
   584                           prodl	equ	0xFF3
   585                           intcon	equ	0xFF2
   586                           postinc0	equ	0xFEE
   587                           fsr0h	equ	0xFEA
   588                           fsr0l	equ	0xFE9
   589                           wreg	equ	0xFE8
   590                           fsr1h	equ	0xFE2
   591                           fsr1l	equ	0xFE1
   592                           bsr	equ	0xFE0
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           
   597                           	psect	intcode_body
   598  0000A6                     __pintcode_body:
   599                           	opt stack 28
   600  0000A6                     int_func:
   601                           	opt stack 28
   602  0000A6  0006               	pop		; remove dummy address from shadow register refresh
   603  0000A8  CFEA F037          	movff	fsr0h,??_high_isr+3
   604  0000AC  CFE1 F038          	movff	fsr1l,??_high_isr+4
   605  0000B0  CFE2 F039          	movff	fsr1h,??_high_isr+5
   606  0000B4  CFD9 F03A          	movff	fsr2l,??_high_isr+6
   607  0000B8  CFDA F03B          	movff	fsr2h,??_high_isr+7
   608  0000BC  CFF3 F03C          	movff	prodl,??_high_isr+8
   609  0000C0  CFF4 F03D          	movff	prodh,??_high_isr+9
   610  0000C4  CFF6 F03E          	movff	tblptrl,??_high_isr+10
   611  0000C8  CFF7 F03F          	movff	tblptrh,??_high_isr+11
   612  0000CC  CFF8 F040          	movff	tblptru,??_high_isr+12
   613  0000D0  CFF5 F041          	movff	tablat,??_high_isr+13
   614                           
   615                           ;interrupts.c: 67: if (PIR2bits.TMR3IF && forward && lstepcount < 500)
   616  0000D4  A2A1               	btfss	4001,1,c	;volatile
   617  0000D6  D046               	goto	i2l830
   618  0000D8  5004               	movf	_forward+1,w,c
   619  0000DA  1003               	iorwf	_forward,w,c
   620  0000DC  B4D8               	btfsc	status,2,c
   621  0000DE  D042               	goto	i2l830
   622  0000E0  500E               	movf	_lstepcount+1,w,c
   623  0000E2  0A80               	xorlw	128
   624  0000E4  6EF3               	movwf	prodl,c
   625  0000E6  0E81               	movlw	129
   626  0000E8  5CF3               	subwf	prodl,w,c
   627  0000EA  0EF4               	movlw	244
   628  0000EC  B4D8               	btfsc	status,2,c
   629  0000EE  5C0D               	subwf	_lstepcount,w,c
   630  0000F0  B0D8               	btfsc	status,0,c
   631  0000F2  D038               	goto	i2l830
   632                           
   633                           ;interrupts.c: 68: {
   634                           ;interrupts.c: 69: lmotorstephigh = 0b00111111;
   635  0000F4  0E3F               	movlw	63
   636  0000F6  6E1F               	movwf	_lmotorstephigh,c
   637                           
   638                           ;interrupts.c: 70: lmotorsteplow = 0b11110000;
   639  0000F8  0EF0               	movlw	240
   640  0000FA  6E20               	movwf	_lmotorsteplow,c
   641                           
   642                           ;interrupts.c: 73: if (lstep == 1)
   643  0000FC  0444               	decf	_lstep,w,c
   644  0000FE  1045               	iorwf	_lstep+1,w,c
   645  000100  A4D8               	btfss	status,2,c
   646  000102  D005               	goto	i2l802
   647                           
   648                           ;interrupts.c: 74: { LATCbits.LATC3 = 0;
   649  000104  968B               	bcf	3979,3,c	;volatile
   650                           
   651                           ;interrupts.c: 75: LATCbits.LATC1 = 1;
   652  000106  828B               	bsf	3979,1,c	;volatile
   653                           
   654                           ;interrupts.c: 76: LATCbits.LATC0 = 0;
   655  000108  908B               	bcf	3979,0,c	;volatile
   656                           
   657                           ;interrupts.c: 77: LATCbits.LATC2 = 0;
   658  00010A  948B               	bcf	3979,2,c	;volatile
   659  00010C  D013               	goto	L2
   660  00010E                     i2l802:
   661                           
   662                           ;interrupts.c: 80: else if (lstep == 2)
   663  00010E  5044               	movf	_lstep,w,c
   664  000110  0A02               	xorlw	2
   665  000112  1045               	iorwf	_lstep+1,w,c
   666  000114  A4D8               	btfss	status,2,c
   667  000116  D005               	goto	i2l808
   668                           
   669                           ;interrupts.c: 81: { LATCbits.LATC3 = 1;
   670  000118  868B               	bsf	3979,3,c	;volatile
   671                           
   672                           ;interrupts.c: 82: LATCbits.LATC2 = 0;
   673  00011A  948B               	bcf	3979,2,c	;volatile
   674                           
   675                           ;interrupts.c: 83: LATCbits.LATC0 = 0;
   676  00011C  908B               	bcf	3979,0,c	;volatile
   677                           
   678                           ;interrupts.c: 84: LATCbits.LATC1 = 0;
   679  00011E  928B               	bcf	3979,1,c	;volatile
   680  000120  D009               	goto	L2
   681  000122                     i2l808:
   682                           
   683                           ;interrupts.c: 87: else if (lstep == 3)
   684  000122  5044               	movf	_lstep,w,c
   685  000124  0A03               	xorlw	3
   686  000126  1045               	iorwf	_lstep+1,w,c
   687  000128  A4D8               	btfss	status,2,c
   688  00012A  D007               	goto	i2l814
   689                           
   690                           ;interrupts.c: 88: { LATCbits.LATC3 = 0;
   691  00012C  968B               	bcf	3979,3,c	;volatile
   692                           
   693                           ;interrupts.c: 89: LATCbits.LATC2 = 1;
   694  00012E  848B               	bsf	3979,2,c	;volatile
   695                           
   696                           ;interrupts.c: 90: LATCbits.LATC1 = 0;
   697  000130  928B               	bcf	3979,1,c	;volatile
   698                           
   699                           ;interrupts.c: 91: LATCbits.LATC0 = 0;
   700  000132  908B               	bcf	3979,0,c	;volatile
   701  000134                     L2:
   702                           
   703                           ;interrupts.c: 92: lstep++;
   704  000134  4A44               	infsnz	_lstep,f,c
   705  000136  2A45               	incf	_lstep+1,f,c
   706                           
   707                           ;interrupts.c: 93: }
   708  000138  D00F               	goto	i2l822
   709  00013A                     i2l814:
   710                           
   711                           ;interrupts.c: 94: else if (lstep == 4)
   712  00013A  5044               	movf	_lstep,w,c
   713  00013C  0A04               	xorlw	4
   714  00013E  1045               	iorwf	_lstep+1,w,c
   715  000140  A4D8               	btfss	status,2,c
   716  000142  D00A               	goto	i2l822
   717                           
   718                           ;interrupts.c: 95: { LATCbits.LATC2 = 0;
   719  000144  948B               	bcf	3979,2,c	;volatile
   720                           
   721                           ;interrupts.c: 96: LATCbits.LATC1 = 0;
   722  000146  928B               	bcf	3979,1,c	;volatile
   723                           
   724                           ;interrupts.c: 97: LATCbits.LATC0 = 1;
   725  000148  808B               	bsf	3979,0,c	;volatile
   726                           
   727                           ;interrupts.c: 98: LATCbits.LATC3 = 0;
   728  00014A  968B               	bcf	3979,3,c	;volatile
   729                           
   730                           ;interrupts.c: 99: lstep = 1;
   731  00014C  0E00               	movlw	0
   732  00014E  6E45               	movwf	_lstep+1,c
   733  000150  0E01               	movlw	1
   734  000152  6E44               	movwf	_lstep,c
   735                           
   736                           ;interrupts.c: 100: lstepcount++;
   737  000154  4A0D               	infsnz	_lstepcount,f,c
   738  000156  2A0E               	incf	_lstepcount+1,f,c
   739  000158                     i2l822:
   740                           
   741                           ;interrupts.c: 101: }
   742                           ;interrupts.c: 104: PIR2bits.TMR3IF = 0;
   743  000158  92A1               	bcf	4001,1,c	;volatile
   744                           
   745                           ;interrupts.c: 105: T3CONbits.TMR3ON = 1;
   746  00015A  80B1               	bsf	4017,0,c	;volatile
   747                           
   748                           ;interrupts.c: 107: TMR3H = lmotorstephigh;
   749  00015C  C01F  FFB3         	movff	_lmotorstephigh,4019	;volatile
   750                           
   751                           ;interrupts.c: 108: TMR3L = lmotorsteplow;
   752  000160  C020  FFB2         	movff	_lmotorsteplow,4018	;volatile
   753  000164                     i2l830:
   754                           
   755                           ;interrupts.c: 109: }
   756                           ;interrupts.c: 112: if (PIR1bits.TMR1IF && forward && rstepcount < 500)
   757  000164  A09E               	btfss	3998,0,c	;volatile
   758  000166  D046               	goto	i2l872
   759  000168  5004               	movf	_forward+1,w,c
   760  00016A  1003               	iorwf	_forward,w,c
   761  00016C  B4D8               	btfsc	status,2,c
   762  00016E  D042               	goto	i2l872
   763  000170  501A               	movf	_rstepcount+1,w,c
   764  000172  0A80               	xorlw	128
   765  000174  6EF3               	movwf	prodl,c
   766  000176  0E81               	movlw	129
   767  000178  5CF3               	subwf	prodl,w,c
   768  00017A  0EF4               	movlw	244
   769  00017C  B4D8               	btfsc	status,2,c
   770  00017E  5C19               	subwf	_rstepcount,w,c
   771  000180  B0D8               	btfsc	status,0,c
   772  000182  D038               	goto	i2l872
   773                           
   774                           ;interrupts.c: 113: {
   775                           ;interrupts.c: 114: rmotorstephigh = 0b00111111;
   776  000184  0E3F               	movlw	63
   777  000186  6E21               	movwf	_rmotorstephigh,c
   778                           
   779                           ;interrupts.c: 115: rmotorsteplow = 0b11110000;
   780  000188  0EF0               	movlw	240
   781  00018A  6E22               	movwf	_rmotorsteplow,c
   782                           
   783                           ;interrupts.c: 118: if (rstep == 1)
   784  00018C  0448               	decf	_rstep,w,c
   785  00018E  1049               	iorwf	_rstep+1,w,c
   786  000190  A4D8               	btfss	status,2,c
   787  000192  D005               	goto	i2l844
   788                           
   789                           ;interrupts.c: 119: { LATCbits.LATC6 = 0;
   790  000194  9C8B               	bcf	3979,6,c	;volatile
   791                           
   792                           ;interrupts.c: 120: LATCbits.LATC7 = 0;
   793  000196  9E8B               	bcf	3979,7,c	;volatile
   794                           
   795                           ;interrupts.c: 121: LATCbits.LATC4 = 1;
   796  000198  888B               	bsf	3979,4,c	;volatile
   797                           
   798                           ;interrupts.c: 122: LATCbits.LATC5 = 0;
   799  00019A  9A8B               	bcf	3979,5,c	;volatile
   800  00019C  D013               	goto	L4
   801  00019E                     i2l844:
   802                           
   803                           ;interrupts.c: 125: else if (rstep == 2)
   804  00019E  5048               	movf	_rstep,w,c
   805  0001A0  0A02               	xorlw	2
   806  0001A2  1049               	iorwf	_rstep+1,w,c
   807  0001A4  A4D8               	btfss	status,2,c
   808  0001A6  D005               	goto	i2l850
   809                           
   810                           ;interrupts.c: 126: { LATCbits.LATC4 = 0;
   811  0001A8  988B               	bcf	3979,4,c	;volatile
   812                           
   813                           ;interrupts.c: 127: LATCbits.LATC5 = 0;
   814  0001AA  9A8B               	bcf	3979,5,c	;volatile
   815                           
   816                           ;interrupts.c: 128: LATCbits.LATC7 = 1;
   817  0001AC  8E8B               	bsf	3979,7,c	;volatile
   818                           
   819                           ;interrupts.c: 129: LATCbits.LATC6 = 0;
   820  0001AE  9C8B               	bcf	3979,6,c	;volatile
   821  0001B0  D009               	goto	L4
   822  0001B2                     i2l850:
   823                           
   824                           ;interrupts.c: 132: else if (rstep == 3)
   825  0001B2  5048               	movf	_rstep,w,c
   826  0001B4  0A03               	xorlw	3
   827  0001B6  1049               	iorwf	_rstep+1,w,c
   828  0001B8  A4D8               	btfss	status,2,c
   829  0001BA  D007               	goto	i2l856
   830                           
   831                           ;interrupts.c: 133: { LATCbits.LATC4 = 0;
   832  0001BC  988B               	bcf	3979,4,c	;volatile
   833                           
   834                           ;interrupts.c: 134: LATCbits.LATC5 = 0;
   835  0001BE  9A8B               	bcf	3979,5,c	;volatile
   836                           
   837                           ;interrupts.c: 135: LATCbits.LATC6 = 1;
   838  0001C0  8C8B               	bsf	3979,6,c	;volatile
   839                           
   840                           ;interrupts.c: 136: LATCbits.LATC7 = 0;
   841  0001C2  9E8B               	bcf	3979,7,c	;volatile
   842  0001C4                     L4:
   843                           
   844                           ;interrupts.c: 137: rstep++;
   845  0001C4  4A48               	infsnz	_rstep,f,c
   846  0001C6  2A49               	incf	_rstep+1,f,c
   847                           
   848                           ;interrupts.c: 138: }
   849  0001C8  D00F               	goto	i2l864
   850  0001CA                     i2l856:
   851                           
   852                           ;interrupts.c: 139: else if (rstep == 4)
   853  0001CA  5048               	movf	_rstep,w,c
   854  0001CC  0A04               	xorlw	4
   855  0001CE  1049               	iorwf	_rstep+1,w,c
   856  0001D0  A4D8               	btfss	status,2,c
   857  0001D2  D00A               	goto	i2l864
   858                           
   859                           ;interrupts.c: 140: { LATCbits.LATC5 = 1;
   860  0001D4  8A8B               	bsf	3979,5,c	;volatile
   861                           
   862                           ;interrupts.c: 141: LATCbits.LATC6 = 0;
   863  0001D6  9C8B               	bcf	3979,6,c	;volatile
   864                           
   865                           ;interrupts.c: 142: LATCbits.LATC7 = 0;
   866  0001D8  9E8B               	bcf	3979,7,c	;volatile
   867                           
   868                           ;interrupts.c: 143: LATCbits.LATC4 = 0;
   869  0001DA  988B               	bcf	3979,4,c	;volatile
   870                           
   871                           ;interrupts.c: 144: rstep = 1;
   872  0001DC  0E00               	movlw	0
   873  0001DE  6E49               	movwf	_rstep+1,c
   874  0001E0  0E01               	movlw	1
   875  0001E2  6E48               	movwf	_rstep,c
   876                           
   877                           ;interrupts.c: 145: rstepcount++;
   878  0001E4  4A19               	infsnz	_rstepcount,f,c
   879  0001E6  2A1A               	incf	_rstepcount+1,f,c
   880  0001E8                     i2l864:
   881                           
   882                           ;interrupts.c: 146: }
   883                           ;interrupts.c: 148: PIR1bits.TMR1IF = 0;
   884  0001E8  909E               	bcf	3998,0,c	;volatile
   885                           
   886                           ;interrupts.c: 149: T1CONbits.TMR1ON = 1;
   887  0001EA  80CD               	bsf	4045,0,c	;volatile
   888                           
   889                           ;interrupts.c: 151: TMR1H = rmotorstephigh;
   890  0001EC  C021  FFCF         	movff	_rmotorstephigh,4047	;volatile
   891                           
   892                           ;interrupts.c: 152: TMR1L = rmotorsteplow;
   893  0001F0  C022  FFCE         	movff	_rmotorsteplow,4046	;volatile
   894  0001F4                     i2l872:
   895                           
   896                           ;interrupts.c: 153: }
   897                           ;interrupts.c: 156: if (PIR2bits.TMR3IF && lstepcount < 60 && lturn)
   898  0001F4  A2A1               	btfss	4001,1,c	;volatile
   899  0001F6  D051               	goto	i2l93
   900  0001F8  500E               	movf	_lstepcount+1,w,c
   901  0001FA  0A80               	xorlw	128
   902  0001FC  6EF3               	movwf	prodl,c
   903  0001FE  0E80               	movlw	128
   904  000200  5CF3               	subwf	prodl,w,c
   905  000202  0E3C               	movlw	60
   906  000204  B4D8               	btfsc	status,2,c
   907  000206  5C0D               	subwf	_lstepcount,w,c
   908  000208  B0D8               	btfsc	status,0,c
   909  00020A  D047               	goto	i2l93
   910  00020C  5047               	movf	_lturn+1,w,c
   911  00020E  1046               	iorwf	_lturn,w,c
   912  000210  B4D8               	btfsc	status,2,c
   913  000212  D043               	goto	i2l93
   914                           
   915                           ;interrupts.c: 157: {
   916                           ;interrupts.c: 158: if (leftturnstep == 1)
   917  000214  0442               	decf	_leftturnstep,w,c
   918  000216  1043               	iorwf	_leftturnstep+1,w,c
   919  000218  A4D8               	btfss	status,2,c
   920  00021A  D008               	goto	i2l884
   921                           
   922                           ;interrupts.c: 159: { LATCbits.LATC0 = 1;
   923  00021C  808B               	bsf	3979,0,c	;volatile
   924                           
   925                           ;interrupts.c: 160: LATCbits.LATC1 = 0;
   926  00021E  928B               	bcf	3979,1,c	;volatile
   927                           
   928                           ;interrupts.c: 161: LATCbits.LATC2 = 0;
   929  000220  948B               	bcf	3979,2,c	;volatile
   930                           
   931                           ;interrupts.c: 162: LATCbits.LATC3 = 0;
   932  000222  968B               	bcf	3979,3,c	;volatile
   933                           
   934                           ;interrupts.c: 163: LATCbits.LATC4 = 1;
   935  000224  888B               	bsf	3979,4,c	;volatile
   936                           
   937                           ;interrupts.c: 164: LATCbits.LATC5 = 0;
   938  000226  9A8B               	bcf	3979,5,c	;volatile
   939                           
   940                           ;interrupts.c: 165: LATCbits.LATC6 = 0;
   941  000228  9C8B               	bcf	3979,6,c	;volatile
   942  00022A  D01A               	goto	L7
   943  00022C                     i2l884:
   944                           
   945                           ;interrupts.c: 169: else if (leftturnstep == 2)
   946  00022C  5042               	movf	_leftturnstep,w,c
   947  00022E  0A02               	xorlw	2
   948  000230  1043               	iorwf	_leftturnstep+1,w,c
   949  000232  A4D8               	btfss	status,2,c
   950  000234  D009               	goto	i2l890
   951                           
   952                           ;interrupts.c: 170: { LATCbits.LATC0 = 0;
   953  000236  908B               	bcf	3979,0,c	;volatile
   954                           
   955                           ;interrupts.c: 171: LATCbits.LATC1 = 0;
   956  000238  928B               	bcf	3979,1,c	;volatile
   957                           
   958                           ;interrupts.c: 172: LATCbits.LATC2 = 1;
   959  00023A  848B               	bsf	3979,2,c	;volatile
   960                           
   961                           ;interrupts.c: 173: LATCbits.LATC3 = 0;
   962  00023C  968B               	bcf	3979,3,c	;volatile
   963                           
   964                           ;interrupts.c: 174: LATCbits.LATC4 = 0;
   965  00023E  988B               	bcf	3979,4,c	;volatile
   966                           
   967                           ;interrupts.c: 175: LATCbits.LATC5 = 0;
   968  000240  9A8B               	bcf	3979,5,c	;volatile
   969                           
   970                           ;interrupts.c: 176: LATCbits.LATC6 = 0;
   971  000242  9C8B               	bcf	3979,6,c	;volatile
   972                           
   973                           ;interrupts.c: 177: LATCbits.LATC7 = 1;
   974  000244  8E8B               	bsf	3979,7,c	;volatile
   975  000246  D00D               	goto	L6
   976  000248                     i2l890:
   977                           
   978                           ;interrupts.c: 180: else if (leftturnstep == 3)
   979  000248  5042               	movf	_leftturnstep,w,c
   980  00024A  0A03               	xorlw	3
   981  00024C  1043               	iorwf	_leftturnstep+1,w,c
   982  00024E  A4D8               	btfss	status,2,c
   983  000250  D00B               	goto	i2l896
   984                           
   985                           ;interrupts.c: 181: { LATCbits.LATC0 = 0;
   986  000252  908B               	bcf	3979,0,c	;volatile
   987                           
   988                           ;interrupts.c: 182: LATCbits.LATC1 = 0;
   989  000254  928B               	bcf	3979,1,c	;volatile
   990                           
   991                           ;interrupts.c: 183: LATCbits.LATC2 = 0;
   992  000256  948B               	bcf	3979,2,c	;volatile
   993                           
   994                           ;interrupts.c: 184: LATCbits.LATC3 = 1;
   995  000258  868B               	bsf	3979,3,c	;volatile
   996                           
   997                           ;interrupts.c: 185: LATCbits.LATC4 = 0;
   998  00025A  988B               	bcf	3979,4,c	;volatile
   999                           
  1000                           ;interrupts.c: 186: LATCbits.LATC5 = 0;
  1001  00025C  9A8B               	bcf	3979,5,c	;volatile
  1002                           
  1003                           ;interrupts.c: 187: LATCbits.LATC6 = 1;
  1004  00025E  8C8B               	bsf	3979,6,c	;volatile
  1005  000260                     L7:
  1006                           
  1007                           ;interrupts.c: 188: LATCbits.LATC7 = 0;
  1008  000260  9E8B               	bcf	3979,7,c	;volatile
  1009  000262                     L6:
  1010                           
  1011                           ;interrupts.c: 189: leftturnstep++;
  1012  000262  4A42               	infsnz	_leftturnstep,f,c
  1013  000264  2A43               	incf	_leftturnstep+1,f,c
  1014                           
  1015                           ;interrupts.c: 190: }
  1016  000266  D013               	goto	i2l904
  1017  000268                     i2l896:
  1018                           
  1019                           ;interrupts.c: 191: else if (leftturnstep == 4)
  1020  000268  5042               	movf	_leftturnstep,w,c
  1021  00026A  0A04               	xorlw	4
  1022  00026C  1043               	iorwf	_leftturnstep+1,w,c
  1023  00026E  A4D8               	btfss	status,2,c
  1024  000270  D00E               	goto	i2l904
  1025                           
  1026                           ;interrupts.c: 192: { LATCbits.LATC0 = 0;
  1027  000272  908B               	bcf	3979,0,c	;volatile
  1028                           
  1029                           ;interrupts.c: 193: LATCbits.LATC1 = 1;
  1030  000274  828B               	bsf	3979,1,c	;volatile
  1031                           
  1032                           ;interrupts.c: 194: LATCbits.LATC2 = 0;
  1033  000276  948B               	bcf	3979,2,c	;volatile
  1034                           
  1035                           ;interrupts.c: 195: LATCbits.LATC3 = 0;
  1036  000278  968B               	bcf	3979,3,c	;volatile
  1037                           
  1038                           ;interrupts.c: 196: LATCbits.LATC4 = 0;
  1039  00027A  988B               	bcf	3979,4,c	;volatile
  1040                           
  1041                           ;interrupts.c: 197: LATCbits.LATC5 = 1;
  1042  00027C  8A8B               	bsf	3979,5,c	;volatile
  1043                           
  1044                           ;interrupts.c: 198: LATCbits.LATC6 = 0;
  1045  00027E  9C8B               	bcf	3979,6,c	;volatile
  1046                           
  1047                           ;interrupts.c: 199: LATCbits.LATC7 = 0;
  1048  000280  9E8B               	bcf	3979,7,c	;volatile
  1049                           
  1050                           ;interrupts.c: 200: leftturnstep = 1;
  1051  000282  0E00               	movlw	0
  1052  000284  6E43               	movwf	_leftturnstep+1,c
  1053  000286  0E01               	movlw	1
  1054  000288  6E42               	movwf	_leftturnstep,c
  1055                           
  1056                           ;interrupts.c: 201: lturncount++;
  1057  00028A  4A0F               	infsnz	_lturncount,f,c
  1058  00028C  2A10               	incf	_lturncount+1,f,c
  1059  00028E                     i2l904:
  1060                           
  1061                           ;interrupts.c: 202: }
  1062                           ;interrupts.c: 203: PIR2bits.TMR3IF = 0;
  1063  00028E  92A1               	bcf	4001,1,c	;volatile
  1064                           
  1065                           ;interrupts.c: 204: T3CONbits.TMR3ON = 1;
  1066  000290  80B1               	bsf	4017,0,c	;volatile
  1067                           
  1068                           ;interrupts.c: 205: TMR3H = rmotorstephigh;
  1069  000292  C021  FFB3         	movff	_rmotorstephigh,4019	;volatile
  1070                           
  1071                           ;interrupts.c: 206: TMR3L = rmotorsteplow;
  1072  000296  C022  FFB2         	movff	_rmotorsteplow,4018	;volatile
  1073  00029A                     i2l93:
  1074  00029A  C041  FFF5         	movff	??_high_isr+13,tablat
  1075  00029E  C040  FFF8         	movff	??_high_isr+12,tblptru
  1076  0002A2  C03F  FFF7         	movff	??_high_isr+11,tblptrh
  1077  0002A6  C03E  FFF6         	movff	??_high_isr+10,tblptrl
  1078  0002AA  C03D  FFF4         	movff	??_high_isr+9,prodh
  1079  0002AE  C03C  FFF3         	movff	??_high_isr+8,prodl
  1080  0002B2  C03B  FFDA         	movff	??_high_isr+7,fsr2h
  1081  0002B6  C03A  FFD9         	movff	??_high_isr+6,fsr2l
  1082  0002BA  C039  FFE2         	movff	??_high_isr+5,fsr1h
  1083  0002BE  C038  FFE1         	movff	??_high_isr+4,fsr1l
  1084  0002C2  C037  FFEA         	movff	??_high_isr+3,fsr0h
  1085  0002C6  C036  FFE9         	movff	??_high_isr+2,fsr0l
  1086  0002CA  C035  FFFB         	movff	??_high_isr+1,pclatu
  1087  0002CE  C034  FFFA         	movff	??_high_isr,pclath
  1088  0002D2  0011               	retfie		f
  1089  0002D4                     __end_of_high_isr:
  1090                           	opt stack 0
  1091  0000                     pclatu	equ	0xFFB
  1092                           pclath	equ	0xFFA
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           prodh	equ	0xFF4
  1098                           prodl	equ	0xFF3
  1099                           intcon	equ	0xFF2
  1100                           postinc0	equ	0xFEE
  1101                           fsr0h	equ	0xFEA
  1102                           fsr0l	equ	0xFE9
  1103                           wreg	equ	0xFE8
  1104                           fsr1h	equ	0xFE2
  1105                           fsr1l	equ	0xFE1
  1106                           bsr	equ	0xFE0
  1107                           fsr2h	equ	0xFDA
  1108                           fsr2l	equ	0xFD9
  1109                           status	equ	0xFD8
  1110                           pclatu	equ	0xFFB
  1111                           pclath	equ	0xFFA
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           prodh	equ	0xFF4
  1117                           prodl	equ	0xFF3
  1118                           intcon	equ	0xFF2
  1119                           postinc0	equ	0xFEE
  1120                           fsr0h	equ	0xFEA
  1121                           fsr0l	equ	0xFE9
  1122                           wreg	equ	0xFE8
  1123                           fsr1h	equ	0xFE2
  1124                           fsr1l	equ	0xFE1
  1125                           bsr	equ	0xFE0
  1126                           fsr2h	equ	0xFDA
  1127                           fsr2l	equ	0xFD9
  1128                           status	equ	0xFD8
  1129                           
  1130                           	psect	rparam
  1131  0000                     pclatu	equ	0xFFB
  1132                           pclath	equ	0xFFA
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           prodh	equ	0xFF4
  1138                           prodl	equ	0xFF3
  1139                           intcon	equ	0xFF2
  1140                           postinc0	equ	0xFEE
  1141                           fsr0h	equ	0xFEA
  1142                           fsr0l	equ	0xFE9
  1143                           wreg	equ	0xFE8
  1144                           fsr1h	equ	0xFE2
  1145                           fsr1l	equ	0xFE1
  1146                           bsr	equ	0xFE0
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      75
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      34        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Apr 11 17:20:06 2015

                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_LVP$ON 000000                           l203 0390                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _adc 0001                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          _LATC 000F8B                          i2l93 029A  
                        _main 02D4                          _left 000B                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00A2  
               __CFG_IESO$OFF 000000                 _rmotorsteplow 0022                         ?_main 0023  
                       i2l802 010E                         i2l814 013A                         i2l822 0158  
                       i2l830 0164                         i2l904 028E                         i2l808 0122  
                       i2l850 01B2                         i2l844 019E                         i2l856 01CA  
                       i2l864 01E8                         i2l872 01F4                         i2l890 0248  
                       i2l884 022C                         i2l896 0268                         _TMR1H 000FCF  
                       _TMR3H 000FB3                         _TMR1L 000FCE                         _TMR3L 000FB2  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95           _ConfigureOscillator 03A4                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _right 0013                         _lstep 0044  
                       _lturn 0046                         _rstep 0048                         _ustep 004A  
                       _uturn 001D               __end_of_low_isr 00A2                         tablat 000FF5  
                       status 000FD8          ?_ConfigureOscillator 0023                __CFG_MCLRE$OFF 000000  
             __initialization 0392                  __end_of_main 0392                        ??_main 0042  
               __activetblptr 000000                _rmotorstephigh 0021                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _OSCCON 000FD3         ??_ConfigureOscillator 0042  
              __CFG_XINST$OFF 000000              __end_of_high_isr 02D4                __CFG_STVREN$ON 000000  
                      clear_0 0398                     ??_low_isr 0023                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0080  
     __end_of__initialization 039E               __CFG_PBADEN$OFF 000000                __pcstackCOMRAM 0023  
                  __pnvCOMRAM 0042                _lmotorstephigh 001F                       _OSCTUNE 000F9B  
                   ?_high_isr 0023                       __Hparam 0000                       __Lparam 0000  
                     __pcinit 0392                       __ramtop 1000                       __ptext0 02D4  
                     __ptext1 03A4                     _T1CONbits 000FCD                       _forward 0003  
                   _T3CONbits 000FB1                       _low_isr 0018                    ??_high_isr 0034  
              __pintcode_body 00A6          end_of_initialization 039E                       int_func 00A6  
                     postinc0 000FEE                    _lstepcount 000D                    _lturncount 000F  
 __end_of_ConfigureOscillator 03A6                    _step_count 001B                    _rstepcount 0019  
         start_initialization 0392              __CFG_OSC$INTIO67 000000              __CFG_LPT1OSC$OFF 000000  
                 __pbssCOMRAM 0001                  _leftturnstep 0042             __size_of_high_isr 02CC  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                 _lmotorsteplow 0020  
                 __pintcodelo 0018                _has_front_wall 0005                      ?_low_isr 0023  
                    _LATCbits 000F8B                      _PIE1bits 000F9D                      _PIE2bits 000FA0  
                    _PIR1bits 000F9E                      _PIR2bits 000FA1                     _rightstep 0015  
              _has_right_wall 0009                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
               _rightturnstep 0017                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                      __Hrparam 0000                      __Lrparam 0000  
          __CFG_BOREN$SBORDIS 000000                 _has_left_wall 0007              __size_of_low_isr 008A  
                    _high_isr 0008                 __size_of_main 00BE  __size_of_ConfigureOscillator 0002  
                    _prev_adc 0011                    _INTCONbits 000FF2                      intlevel1 0000  
                    intlevel2 0000  
